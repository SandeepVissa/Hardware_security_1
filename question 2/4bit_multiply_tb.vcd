$date
	Mon Aug 14 22:48:08 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module multiplier_4bit_tb $end
$var wire 8 ! P [7:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$scope module dut $end
$var wire 4 $ A [3:0] $end
$var wire 4 % B [3:0] $end
$var wire 9 & P_extended [8:0] $end
$var wire 8 ' P [7:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ( i $end
$scope begin genblk1[0] $end
$var parameter 2 ) j $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 * j $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 + j $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 , j $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 - j $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 . j $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 / j $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 0 j $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 1 i $end
$scope begin genblk1[0] $end
$var parameter 2 2 j $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 3 j $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 4 j $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 5 j $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 6 j $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 7 j $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 8 j $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 9 j $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 : i $end
$scope begin genblk1[0] $end
$var parameter 2 ; j $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 < j $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 = j $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 > j $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 ? j $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 @ j $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 A j $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 B j $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 C i $end
$scope begin genblk1[0] $end
$var parameter 2 D j $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 E j $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 F j $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 G j $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 H j $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 I j $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 J j $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 K j $end
$upscope $end
$upscope $end
$scope begin genblk2[0] $end
$var parameter 2 L k $end
$scope begin genblk1[1] $end
$var parameter 2 M j $end
$scope module fa $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 P Cin $end
$var wire 1 Q Cout $end
$var wire 1 R Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 S j $end
$scope module fa $end
$var wire 1 T A $end
$var wire 1 U B $end
$var wire 1 V Cin $end
$var wire 1 W Cout $end
$var wire 1 X Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 Y j $end
$scope module fa $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 \ Cin $end
$var wire 1 ] Cout $end
$var wire 1 ^ Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 _ j $end
$scope module fa $end
$var wire 1 ` A $end
$var wire 1 a B $end
$var wire 1 b Cin $end
$var wire 1 c Cout $end
$var wire 1 d Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 e j $end
$scope module fa $end
$var wire 1 f A $end
$var wire 1 g B $end
$var wire 1 h Cin $end
$var wire 1 i Cout $end
$var wire 1 j Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 k j $end
$scope module fa $end
$var wire 1 l A $end
$var wire 1 m B $end
$var wire 1 n Cin $end
$var wire 1 o Cout $end
$var wire 1 p Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 q j $end
$scope module fa $end
$var wire 1 r A $end
$var wire 1 s B $end
$var wire 1 t Cin $end
$var wire 1 u Cout $end
$var wire 1 v Sum $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 w A $end
$var wire 1 x B $end
$var wire 1 y Cin $end
$var wire 1 z Cout $end
$var wire 1 { Sum $end
$upscope $end
$upscope $end
$scope begin genblk2[1] $end
$var parameter 2 | k $end
$scope begin genblk1[1] $end
$var parameter 2 } j $end
$scope module fa $end
$var wire 1 ~ A $end
$var wire 1 !" B $end
$var wire 1 "" Cin $end
$var wire 1 #" Cout $end
$var wire 1 $" Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 %" j $end
$scope module fa $end
$var wire 1 &" A $end
$var wire 1 '" B $end
$var wire 1 (" Cin $end
$var wire 1 )" Cout $end
$var wire 1 *" Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 +" j $end
$scope module fa $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 ." Cin $end
$var wire 1 /" Cout $end
$var wire 1 0" Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 1" j $end
$scope module fa $end
$var wire 1 2" A $end
$var wire 1 3" B $end
$var wire 1 4" Cin $end
$var wire 1 5" Cout $end
$var wire 1 6" Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 7" j $end
$scope module fa $end
$var wire 1 8" A $end
$var wire 1 9" B $end
$var wire 1 :" Cin $end
$var wire 1 ;" Cout $end
$var wire 1 <" Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 =" j $end
$scope module fa $end
$var wire 1 >" A $end
$var wire 1 ?" B $end
$var wire 1 @" Cin $end
$var wire 1 A" Cout $end
$var wire 1 B" Sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 C" j $end
$scope module fa $end
$var wire 1 D" A $end
$var wire 1 E" B $end
$var wire 1 F" Cin $end
$var wire 1 G" Cout $end
$var wire 1 H" Sum $end
$upscope $end
$upscope $end
$scope module fa $end
$var wire 1 I" A $end
$var wire 1 J" B $end
$var wire 1 K" Cin $end
$var wire 1 L" Cout $end
$var wire 1 M" Sum $end
$upscope $end
$upscope $end
$scope module adder $end
$var wire 8 N" A [7:0] $end
$var wire 8 O" B [7:0] $end
$var wire 1 P" Cin $end
$var wire 8 Q" Sum [7:0] $end
$var wire 8 R" internal_sum [7:0] $end
$var wire 8 S" carry_chain [7:0] $end
$var wire 1 T" Cout $end
$scope begin genblk1[0] $end
$var parameter 2 U" i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 V" i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 W" i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 X" i $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 Y" i $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 Z" i $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 [" i $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 ["
b101 Z"
b100 Y"
b11 X"
b10 W"
b1 V"
b0 U"
b111 C"
b110 ="
b101 7"
b100 1"
b11 +"
b10 %"
b1 }
b1 |
b111 q
b110 k
b101 e
b100 _
b11 Y
b10 S
b1 M
b0 L
b111 K
b110 J
b101 I
b100 H
b11 G
b10 F
b1 E
b0 D
b11 C
b111 B
b110 A
b101 @
b100 ?
b11 >
b10 =
b1 <
b0 ;
b10 :
b111 9
b110 8
b101 7
b100 6
b11 5
b10 4
b1 3
b0 2
b1 1
b111 0
b110 /
b101 .
b100 -
b11 ,
b10 +
b1 *
b0 )
b0 (
$end
#0
$dumpvars
xT"
bx0 S"
bx R"
bx Q"
0P"
b0 O"
bx0000 N"
0M"
0L"
0K"
0J"
0I"
xH"
xG"
xF"
xE"
xD"
xB"
xA"
x@"
x?"
x>"
x<"
x;"
x:"
x9"
x8"
x6"
x5"
04"
x3"
x2"
00"
0/"
0."
0-"
0,"
0*"
0)"
0("
0'"
0&"
0$"
0#"
0""
0!"
0~
0{
0z
0y
0x
0w
xv
xu
xt
xs
xr
xp
xo
xn
xm
xl
xj
xi
xh
xg
xf
xd
xc
0b
xa
x`
0^
0]
0\
0[
0Z
0X
0W
0V
0U
0T
0R
1Q
0P
1O
1N
bx '
b0xxxx0000 &
b11 %
b10 $
b11 #
b10 "
bx !
$end
#10
1]
1/"
bx0100 N"
0Q
1\
1."
0b
b0xxxx0100 &
04"
1X
1*"
0^
00"
0N
0O
1U
1'"
1[
1-"
b1010 #
b1010 %
b1100 "
b1100 $
#20
