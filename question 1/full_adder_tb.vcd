$date
	Mon Aug 14 22:22:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module FullAdder8Bit_TB $end
$var wire 8 ! Sum [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % Cin $end
$scope module dut $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 1 % Cin $end
$var wire 8 ( carry_outs [7:0] $end
$var wire 8 ) Sum [7:0] $end
$var wire 1 " Cout $end
$scope begin gen_full_adders[0] $end
$var parameter 2 * i $end
$scope module fa $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 % Cin $end
$var wire 1 - Cout $end
$var wire 1 . Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[1] $end
$var parameter 2 / i $end
$scope module fa $end
$var wire 1 0 A $end
$var wire 1 1 B $end
$var wire 1 2 Cin $end
$var wire 1 3 Cout $end
$var wire 1 4 Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[2] $end
$var parameter 3 5 i $end
$scope module fa $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 8 Cin $end
$var wire 1 9 Cout $end
$var wire 1 : Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[3] $end
$var parameter 3 ; i $end
$scope module fa $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 > Cin $end
$var wire 1 ? Cout $end
$var wire 1 @ Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[4] $end
$var parameter 4 A i $end
$scope module fa $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 D Cin $end
$var wire 1 E Cout $end
$var wire 1 F Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[5] $end
$var parameter 4 G i $end
$scope module fa $end
$var wire 1 H A $end
$var wire 1 I B $end
$var wire 1 J Cin $end
$var wire 1 K Cout $end
$var wire 1 L Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[6] $end
$var parameter 4 M i $end
$scope module fa $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 P Cin $end
$var wire 1 Q Cout $end
$var wire 1 R Sum $end
$upscope $end
$upscope $end
$scope begin gen_full_adders[7] $end
$var parameter 4 S i $end
$scope module fa $end
$var wire 1 T A $end
$var wire 1 U B $end
$var wire 1 V Cin $end
$var wire 1 W Cout $end
$var wire 1 X Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 S
b110 M
b101 G
b100 A
b11 ;
b10 5
b1 /
b0 *
$end
#0
$dumpvars
0X
1W
1V
1U
0T
1R
1Q
1P
1O
1N
0L
1K
1J
0I
1H
0F
1E
1D
1C
0B
0@
1?
0>
1=
1<
0:
09
08
07
06
14
03
02
11
00
1.
0-
0,
1+
b1000011 )
b11111000 (
b11011010 '
b1101001 &
0%
b11011010 $
b1101001 #
1"
b1000011 !
$end
#10
1@
1>
19
0"
0W
18
1X
13
0V
04
0Q
12
1L
0:
b111111 (
1-
b11101001 !
b11101001 )
1.
1,
01
1I
0O
0U
10
16
0N
1T
1%
b111001 $
b111001 '
b10101111 #
b10101111 &
#20
